{
  "_from": "ffmpeg-extract-frame",
  "_id": "ffmpeg-extract-frame@1.0.1",
  "_inBundle": false,
  "_integrity": "sha1-aW5dFrttFa4etWM7b5bU/I/KdTg=",
  "_location": "/ffmpeg-extract-frame",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "ffmpeg-extract-frame",
    "fetchSpec": "latest",
    "name": "ffmpeg-extract-frame",
    "raw": "ffmpeg-extract-frame",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ffmpeg-extract-frame/-/ffmpeg-extract-frame-1.0.1.tgz",
  "_shasum": "696e5d16bb6d15ae1eb5633b6f96d4fc8fca7538",
  "_spec": "ffmpeg-extract-frame",
  "_where": "D:\\Courses\\COMP512_ProjWS1",
  "author": {
    "email": "travis@automagical.ai",
    "name": "Travis Fischer"
  },
  "bugs": {
    "url": "https://github.com/transitive-bullshit/ffmpeg-extract-frame/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "fluent-ffmpeg": "^2.1.2"
  },
  "deprecated": false,
  "description": "Extracts a single frame from a video.",
  "devDependencies": {
    "ava": "^0.25.0",
    "sharp": "^0.20.1",
    "standard": "^11.0.0",
    "tempy": "^0.2.1"
  },
  "homepage": "https://github.com/transitive-bullshit/ffmpeg-extract-frame#readme",
  "keywords": [
    "ffmpeg",
    "fluent-ffmpeg"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "ffmpeg-extract-frame",
  "optionalDependencies": {},
  "readme": "# ffmpeg-extract-frame\n\n> Extracts a single frame from a video using [fluent-ffmpeg](https://github.com/fluent-ffmpeg/node-fluent-ffmpeg).\n\n[![NPM](https://img.shields.io/npm/v/ffmpeg-extract-frame.svg)](https://www.npmjs.com/package/ffmpeg-extract-frame) [![Build Status](https://travis-ci.org/transitive-bullshit/ffmpeg-extract-frame.svg?branch=master)](https://travis-ci.org/transitive-bullshit/ffmpeg-extract-frame) [![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\n## Install\n\n```bash\nnpm install --save ffmpeg-extract-frame\n# or\nyarn add ffmpeg-extract-frame\n```\n\n## Usage\n\n```js\nconst extractFrame = require('ffmpeg-extract-frame')\n\nawait extractFrame({\n  input: 'media/1.mp4',\n  output: 'test.jpg',\n  offset: 1000 // seek offset in milliseconds\n})\n```\n\n## API\n\n### extractFrame(options)\n\nExtracts a single frame from a video file. Returns a `Promise` for when the file has been written.\n\n#### options\n\n##### input\n\nType: `String`\n\nPath or URL to a video file.\n\n##### output\n\nType: `String`\n\nPath to a `jpg` or `png` file to output.\n\n##### offset\n\nType: `Number`\nDefault: `0`\n\nSeek offset to take the screenshot from in milliseconds.\n\n##### quality\n\nType: `Number`\nDefault: `2`\n\nIf exporting a jpeg image, the quality from 1-31 with 31 being the worst quality ([source](https://stackoverflow.com/questions/10225403/how-can-i-extract-a-good-quality-jpeg-image-from-an-h264-video-file-with-ffmpeg)).\n\n##### log\n\nType: `Function`\nDefault: `noop`\n\nOptional function to log the underlying ffmpeg command. You may, for example, use `console.log`\n\n## Related\n\n- [ffmpeg-extract-frames](https://github.com/transitive-bullshit/ffmpeg-extract-frames) extracts multiple frames at a time.\n- [fluent-ffmpeg](https://github.com/fluent-ffmpeg/node-fluent-ffmpeg)\n- [awesome-ffmpeg](https://github.com/transitive-bullshit/awesome-ffmpeg) - A curated list of awesome ffmpeg resources with a focus on JavaScript.\n\n## License\n\nMIT Â© [Travis Fischer](https://github.com/transitive-bullshit)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/transitive-bullshit/ffmpeg-extract-frame.git"
  },
  "reveal": true,
  "scripts": {
    "test": "ava -v && standard"
  },
  "version": "1.0.1"
}
